@model DayDetailsViewModel
@{
    ViewBag.Title = Model.Day.Name;
}
<h2>@Model.Day.Name</h2>
<p><em>@String.Format("{0:D}", Model.Day.Date)</em></p>
<p>Coefficient : @String.Format("{0:F1}", Model.Day.Coefficient)</p>
<ul class="ff-details">
    @foreach (var fixture in Model.Fixtures.OrderBy(x => x.Date))
    {
        <li class="fixture">
            <div class="fixture-date">@String.Format("{0:g}", fixture.Date)</div>
            <div class="home">@Model.Teams.First(t => t.TeamId == fixture.HomeTeamId).Name</div>
            <div class="score">
                @if (fixture.HomeTeamGoals.HasValue && fixture.AwayTeamGoals.HasValue)
                {
                    @: @fixture.HomeTeamGoals.Value - @fixture.AwayTeamGoals.Value
                    }
            </div>
            <div class="away">@Model.Teams.First(t => t.TeamId == fixture.AwayTeamId).Name</div>
            <ul>
                @foreach (var user in Model.Users)
                {
                    <li class="player-forecast">
                        @{
                    var userForecast = Model.Forecasts.FirstOrDefault(f => f.UserId == user.UserId && f.FixtureId == fixture.FixtureId);
                    string forecastResult = string.Empty;
                    string forecastScore = string.Empty;
                    if (userForecast != null)
                    {
                        if (user.UserId == Model.CurrentUserId || !fixture.CanBeForecast)
                        {
                            forecastResult = string.Format("{0} - {1}", userForecast.HomeTeamGoals, userForecast.AwayTeamGoals);
                        }
                        else
                        {
                            forecastResult = "? - ?";
                        }
                        if (userForecast.Score.HasValue)
                        {
                            forecastScore = string.Format("{0:F1}", userForecast.Score.Value);
                        }
                    }
                        }
                        <div class="player">@user.Name</div>
                        <div class="score forecast">@forecastResult</div>
                        <div class="points">@forecastScore</div>
                    </li>
                }
            </ul>
        </li>
    }
    <li class="fixture footer">
        <div class="fixture-date"></div>
        <div class="home"></div>
        <div class="score"></div>
        <div class="away"></div>
        <ul>
            @foreach (var user in Model.Users)
            {
                <li class="player-forecast">
                    <div class="player">@user.Name</div>
                    <div class="points">@String.Format("{0:F1}", Model.Forecasts.Where(x => x.UserId == user.UserId).Sum(x => x.Score))</div>
                </li>
            }
        </ul>
    </li>
</ul>

@if (Model.Fixtures.Any(x => x.CanBeForecast))
{
    <p>@Html.ActionLink("Pronostiquer", "Forecast", new { id = Model.Day.DayId })</p>
}
@if (Request.IsAuthenticated && User.IsInRole("Administrators"))
{
    <p>@Html.ActionLink("Modifier", "Edit", new { id = Model.Day.DayId })</p>
}
