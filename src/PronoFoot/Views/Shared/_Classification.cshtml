@model IEnumerable<UserScoreViewModel>
<table class="table table-striped">
    <thead>
        <tr>
            <th></th>
            <th></th>
            <th class="points">Score</th>
            <th class="stat">3 pts</th>
            <th class="stat">2 pts</th>
            <th class="stat">1.5 pts</th>
            <th class="stat">1 pt</th>
            <th class="stat">0 pt</th>
            <th class="stat">% >= 1 pt</th>
        </tr>
    </thead>
    <tbody>
        @{
            int rank = 1;
            foreach (var userScore in Model.OrderByDescending(x => x.Score).ThenByDescending(x => x.NumberOfExactForecasts).ThenByDescending(x => x.NumberOfCloseForecasts))
            {
                <tr>
                    <td>@rank</td>
                    <td>@userScore.UserName</td>
                    <td class="points">@String.Format("{0:F1}", userScore.Score)</td>
                    <td class="stat">@String.Format("{0:N0}", userScore.NumberOfExactForecasts)</td>
                    <td class="stat">@String.Format("{0:N0}", userScore.NumberOfCloseForecasts)</td>
                    <td class="stat">@String.Format("{0:N0}", userScore.NumberOfForecastsWithExactDifference)</td>
                    <td class="stat">@String.Format("{0:N0}", userScore.NumberOfCorrect1N2Forecasts)</td>
                    <td class="stat">@String.Format("{0:N0}", userScore.NumberOfWrongForecasts)</td>
                    <td class="stat">@String.Format("{0:P2}", userScore.PercentageOfScoringForecasts)</td>
                </tr>
                rank++;
            }
        }
    </tbody>
</table>
